{{ 'ba-cod-form-style.css' | asset_url | stylesheet_tag }}

<!-- Button trigger modal -->
<div class="d-flex justify-content-end">
  <button id="ba-cod-modal-btn" style="visibility: hidden" type="button" class="btn btn-primary" data-toggle="modal" data-target="#staticBackdrop">
    Launch modal
  </button>
</div>

<!-- Modal -->
<div class="modal ba-cod-modal fade" id="staticBackdrop" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog ba-modal-dialog modal-dialog-scrollable">
    <div class="modal-content ba-modal-content">
      <div class="modal-header row align-items-center p-4">
        <div class="col-10">
          <h5 class="modal-title" id="staticBackdropLabel">
            <div>
              <span class="ba-cod-product-header" id="product-header-id"></span>
              <span class="ba-cod-product-header" style="display: none"> (<span id="product-count-id"></span>) </span>
            </div>
          </h5>
        </div>
        <div class="col-2">
          <button style="font-size: 30px; font-weight: 100" id="baCodFormClose" onclick="clearCartEmbed()" type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
      </div>
      <div class="modal-body ba-modal-body p-0">
        <!-- Product info card -->
        <div id="product-info-div" class="p-2 m-2 mb-3">

        </div>
        {% comment %} Product info div loader {% endcomment %}
        <div id="ba-product-info-div-loader" class="spinner-border ba-cod-main-divs-spinner text-secondary ml-3" role="status">
          <span class="sr-only">Loading...</span>
        </div>

        <!-- Bundle product card -->
        <div id="ba-cod-bundle-div" class="pt-2" style="background: #F2F3F4;">
          <div id="ba-cod-bundle-cards-div" class="row ba-cod-discount-row mt-2 ml-3">

          </div>
        </div>



        <div class="pt-3 ba-cod-separator"></div>

        <!-- Discount coupon card -->
        <div id="ba-discount-coupon-div" class="p-2 m-2">
          <div class="d-flex align-items-center">
            <span class="ba-cod-card-header" id="discount-header-id"></span>
            <div id="ba-cod-discount-loader" style="display: none" class="spinner-border text-secondary ml-2" role="status">
              <span class="sr-only">Loading...</span>
            </div>
          </div>
          <div id="ba-cod-discount-div" class="row ba-cod-discount-row mt-2 ml-0">

            <div id="ba-active-coupon" style="display: none" class="col-auto p-3 ba-cod-discount-card ba-cod-discount-card-active mr-2">
              <div class="row pt-2 justify-content-between mb-3 ba-cod-discount-title">
                <div class="col-10 pr-0">
                  <div id="ba-cod-saved-amount" class="ba-cod-discount-title1"></div>
                  <div id="ba-cod-saved-amount-line2" class="ba-cod-discount-title2"></div>
                </div>
                <div class="col-2 pl-0">
                  {% render 'ba-discount-active-tick' %}
                </div>
              </div>
              <div>
                <span>{% render 'ba-discount-percent-icon' %} </span> <span id="ba-cod-applied-coupon-content" class="ba-discount-applied-name"></span>
              </div>
            </div>

          </div>
          {% comment %} Discount coupon div loader {% endcomment %}
          <div id="ba-discount-coupon-div-loader" class="spinner-border ba-cod-main-divs-spinner text-secondary ml-2" role="status">
            <span class="sr-only">Loading...</span>
          </div>
        </div>

        <div id="ba-discount-div-separator" class="pt-3 mt-3 mb-3 ba-cod-separator"></div>

        <!-- Delivery address form fields card -->
        <div id="ba-cod-form-div" class="p-2 m-2">
          <div class="d-flex align-items-center">
            <span class="ba-cod-card-header" id="delivery-address-header-id"></span>
          </div>

          <div class="row mt-3 pb-2">
            <div class="col-12">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('name')" class="form-control ba-cod-input-field" id="farmerName" placeholder="Name"/>
                <label id="farmerNameLabel" for="farmerName">Name</label>
              </div>
              <span id="farmerNameRequired" class="ba-mandatory-field-text pl-1">Enter name</span>
            </div>
          </div>

          <div class="row mt-3 pb-2">
            <div style="display: none" class="col-6 pr-1">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('alternate mobile')" class="form-control ba-cod-input-field" id="alternateMobile" type="text" maxlength="10" placeholder="Alternate Number"/>
                <label id="alternateMobileLabel" for="alternateMobile">Alternate Number</label>
              </div>
            </div>
            <div class="col-6 pr-1">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('mobile')" class="form-control ba-cod-input-field" id="farmerMobile"
                       type="tel" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" maxlength="10" placeholder="Mobile Number"/>
                <label id="farmerMobileLabel" for="farmerMobile">Mobile Number</label>
              </div>
              <span id="farmerMobileRequired" class="ba-mandatory-field-text pl-1">Enter mobile number</span>
            </div>
            <div class="col-6 pl-1">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('pincode')"  class="form-control ba-cod-input-field" id="baCodPincode"
                       type="tel" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" maxlength="6" placeholder="Pincode"/>
                <label id="baCodPincodeLabel" for="baCodPincode">Pincode</label>
              </div>
              <span id="baCodPincodeRequired" class="ba-mandatory-field-text pl-1">Enter pincode</span>
            </div>
          </div>

          <div class="row mt-3 pb-2">
            <div class="col-6 pr-1">
              <div class="form-group has-float-label dropdown">
                <button onclick="onInputElementClick('state')" id="baCodStateSelect" class="btn btn-lg btn-block ba-cod-select-field btn-white dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                  State
                </button>
                <label id="baCodStateSelectLabel" for="baCodStateSelect">State</label>
                <div id="baCodStateOptions" class="dropdown-menu ba-cod-options-field" aria-labelledby="baCodStateSelect">
                </div>
              </div>
              <span id="baCodStateSelectRequired" class="ba-mandatory-field-text pl-1">Enter State</span>
            </div>
            <div class="col-6 pl-1">
              <div class="form-group has-float-label dropdown">
                <button onclick="onInputElementClick('district')" id="baCodDistrictSelect" class="btn btn-lg btn-block ba-cod-select-field btn-white dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                  <span id="baCodDistrictSelectLabel">District</span>
                  <div id="ba-cod-district-loader" style="display: none" class="spinner-border text-secondary ml-2" role="status">
                    <span class="sr-only">Loading...</span>
                  </div>
                </button>
                <label id="baCodDistrictSelectLabel2" for="baCodDistrictSelect">District</label>
                <div id="baCodDistrictOptions" class="dropdown-menu ba-cod-options-field" aria-labelledby="baCodDistrictSelect">
                </div>
              </div>
              <span id="baCodDistrictSelectRequired" class="ba-mandatory-field-text pl-1">Enter District</span>
            </div>
          </div>

          <div style="display: none" class="row mt-3 pb-2">
            <div class="col-6 pr-1">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('taluka')" class="form-control ba-cod-input-field" id="talukaName" placeholder="Taluka"/>
                <label id="talukaNameLabel" for="talukaName">Taluka</label>
              </div>
              <span id="talukaNameRequired" class="ba-mandatory-field-text pl-1">Enter taluka</span>
            </div>
            <div class="col-6 pl-1">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('village')" class="form-control ba-cod-input-field" id="villageName" placeholder="Village"/>
                <label id="villageNameLabel" for="villageName">Village</label>
              </div>
              <span id="villageNameRequired" class="ba-mandatory-field-text pl-1">Enter village</span>
            </div>
          </div>

          <div class="row mt-3 pb-2">
            <div class="col-12">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('address')" class="form-control ba-cod-full-width-input-field" id="baAddress" maxlength="150" placeholder="Address (ex : plot no, street name, road etc)"/>
                <label id="baAddressLabel" for="baAddress">Address (ex : plot no, street name, road etc)</label>
              </div>
              <span id="baAddressRequired" class="ba-mandatory-field-text pl-1">Enter address</span>
            </div>
          </div>

          <div class="row mt-3 pb-2">
            <div class="col-12">
              <div class="form-group has-float-label mb-0">
                <input onclick="onInputElementClick('landmark')" class="form-control ba-cod-full-width-input-field" id="baLandmark" maxlength="150" placeholder="Landmark (ex : near gopal mandir, school etc)"/>
                <label id="baLandmarkLabel" for="baLandmark">Landmark</label>
              </div>
              <span id="baLandmarkRequired" class="ba-mandatory-field-text pl-1">Enter landmark</span>
            </div>
          </div>

          <div style="display: none" class="row mt-3 pb-2">
            <div class="col-12">
              <div class="form-group has-float-label">
                <input onclick="onInputElementClick('post office')" class="form-control ba-cod-full-width-input-field" id="baPostOffice" placeholder="Post Office (Optional)"/>
                <label id="baPostOfficeLabel" for="baPostOffice">Post Office</label>
              </div>
            </div>
          </div>

        </div>

        <div class="pt-3 mt-3 mb-3 ba-cod-separator"></div>

        <!-- Free Delivery card -->
        <div id="ba-cod-free-delivery-div" class="p-2 m-2">
          <div class="d-flex align-items-center">
            {% render 'ba-free-delivery-icon' %}
            <span class="pl-2 pr-2" style="color: #0A8047; font-size: 16px; font-weight: 600; line-height: 20px"
                  id="ba-cod-delivery-days-label"> FREE Delivery</span>
            <span class="pl-3 pr-3" style="color: #CED1D9; font-size: 18px; font-weight: 600;"
            > | </span>
            <span class="pl-2 pr-2" id="ba-cod-delivery-date" style="color: #181B26; font-size: 16px; font-weight: 400; line-height: 20px"
            >  </span>
          </div>
        </div>

        <div class="pt-3 mt-3 mb-3 ba-cod-separator"></div>

        <!-- Price details card -->
        <div id="ba-cod-price-details-div" class="p-2 m-2">
          <div class="d-flex align-items-center">
            <span class="ba-cod-card-header" id="ba-cod-price-header-id"></span>
          </div>
          <div id="ba-cod-price-details-content" class="mt-3 pb-2"></div>
        </div>

        <!-- Trust badge card -->
        <div>
          {% comment %}{{ "ba_cod_trust_badge_en.png" | asset_url | img_tag }}{% endcomment %}
          <img id="ba-cod-trust-badge-img" class="w-100" alt="ba-trust-badge" loading="lazy"/>
        </div>

      </div>
      <div class="modal-footer ba-cod-footer">
        <button id="ba-cod-create-order-button" class="row w-100 ba-cod-create-order-button d-flex align-items-center justify-content-between"
                onclick="createOrderObject()">
          <div class="col-6 p-0">
            <div id="ba-cod-footer-delivery-label" class="ba-cod-footer-delivery-label"></div>
            <div id="ba-cod-footer-total-amount" class="ba-cod-footer-total"></div>
          </div>
          {% comment %}<div class="col-4">{% endcomment %}
            {% comment %}<div class="ba-cod-footer-line-separator"> | </div>{% endcomment %}
          {% comment %}</div>{% endcomment %}
          <div class="col-6 p-0">
            <div id="ba-cod-footer-place-order" class="ba-cod-footer-place-order"></div>
          </div>
        </button>
        {% comment %}<button type="button" onclick="createOrderObject()" class="btn btn-primary">Understood</button>{% endcomment %}
      </div>
    </div>
  </div>
</div>

<div id="ba-cod-form-overlay-loader" style="display: none" class="ba-cod-form-overlay">
  <div class="ba-cod-form-overlay__inner">
    <div class="ba-cod-form-overlay__content"><span class="ba-cod-form-overlay-spinner"></span></div>
  </div>
</div>

<script>
  let currentUrl1 = window.location.href;
  let lang = 'hi';
  if (currentUrl1?.includes('.com/en')) {
    lang = 'en';
  } else if (currentUrl1?.includes('.com/mr')) {
    lang = 'mr';
  } else {
    lang = 'hi';
  }
  let selectedBundles = [];

  // let productHeader = 'प्रोडक्ट';
  let productHeader = 'कैश ऑन डिलीवरी से खरीदें';
  let discountHeader = 'डिस्काउंट कूपन';
  let applyCouponBtn = 'अप्लाई करें';
  let deliveryAddressHeader = 'डिलीवरी पता';
  let priceDetailsHeader = 'ऑर्डर की जानकारी';

  let nameLabel = 'नाम';
  let mobileLabel = 'मोबाइल नंबर (10 डिजिट)';
  let alternateMobileLabel = 'कोई दूसरा मोबाइल नंबर';
  let pincodeLabel = 'पिनकोड';
  let stateLabel = 'राज्य';
  let districtLabel = 'जिला';
  let talukaLabel = 'तहसील';
  let villageLabel = 'गावं';
  let addressLabel = 'मकान नंबर, रोड, कॉलोनी';
  let landmarkLabel = 'लैंडमार्क (मंदिर, स्कूल, नहर के पास)';
  let postOfficeLabel = 'पोस्ट ऑफिस';

  let nameRequiredLabel = 'नाम';
  let mobileRequiredLabel = 'मोबाइल नंबर';
  let pincodeRequiredLabel = 'पिनकोड';
  let stateRequiredLabel = 'राज्य';
  let districtRequiredLabel = 'जिला';
  let talukaRequiredLabel = 'तहसील';
  let villageRequiredLabel = 'गावं';
  let addressRequiredLabel = 'मकान नंबर, रोड, कॉलोनी';
  let landmarkRequiredLabel = 'लैंडमार्क';

  let priceDetailsDiscountLabel = 'प्रोडक्ट डिस्काउंट';
  let priceDetailsFreeDeliveryLabel = 'डिलीवरी शुल्क';
  let priceDetailsFreeDeliveryValueLabel = 'फ्री';
  let priceDetailsTotalAmountLabel = 'कुल बिल';

  let cashOnDeliveryLabel = 'कैश ऑन डिलीवरी';
  let placeOrderLabel = 'ऑर्डर पूरा करें';

  let removeIconLabel = 'हटाए';
  let addIconLabel = 'जोड़ें +';
  let addedBtnLabel = 'जोड़ा गया ✓';

  if (lang === 'en') {
    // productHeader = 'Product';
    productHeader = 'Cash On Delivery';
    discountHeader = 'Discount Coupon';
    applyCouponBtn = 'Apply';
    deliveryAddressHeader = 'Delivery Address';
    priceDetailsHeader = 'Price Details';

    nameLabel = 'Name';
    mobileLabel = 'Mobile Number (10 digits)';
    alternateMobileLabel = 'Alternate Number';
    pincodeLabel = 'Pincode';
    stateLabel = 'State';
    districtLabel = 'District';
    talukaLabel = 'Taluka';
    villageLabel = 'Village';
    addressLabel = 'Address (ex : plot no, street name, road etc)';
    landmarkLabel = 'Landmark (ex : near gopal mandir, school etc)';
    postOfficeLabel = 'Post Office (Optional)';

    nameRequiredLabel = 'Enter Name';
    mobileRequiredLabel = 'Enter Mobile Number';
    pincodeRequiredLabel = 'Enter Pincode';
    stateRequiredLabel = 'Enter State';
    districtRequiredLabel = 'Enter District';
    talukaRequiredLabel = 'Enter Taluka';
    villageRequiredLabel = 'Enter Village';
    addressRequiredLabel = 'Enter Address';
    landmarkRequiredLabel = 'Enter Landmark';

    priceDetailsDiscountLabel = 'Items Discount';
    priceDetailsFreeDeliveryLabel = 'Delivery Charges';
    priceDetailsFreeDeliveryValueLabel = 'FREE'
    priceDetailsTotalAmountLabel = 'Total Amount';

    cashOnDeliveryLabel = 'Cash On Delivery';
    placeOrderLabel = 'Place Order';

    removeIconLabel = 'Remove';
    addIconLabel = 'Add +';
    addedBtnLabel = 'Added ✓';
  }

  if (lang === 'mr') {
    // productHeader = 'प्रॉडक्ट';
    productHeader = 'कैश ऑन डिलीवरी से खरीदें';
    discountHeader = 'डिस्काउंट कूपन';
    applyCouponBtn = 'लागू करा';
    deliveryAddressHeader = 'डिलिव्हरी पत्ता';
    priceDetailsHeader = 'ऑर्डरची माहिती';

    nameLabel = 'नाव';
    mobileLabel = 'मोबाइल नंबर (10 डिजिट)';
    alternateMobileLabel = 'पर्यायी मोबाइल नंबर';
    pincodeLabel = 'पिनकोड';
    stateLabel = 'राज्य';
    districtLabel = 'जिला';
    talukaLabel = 'तालुका';
    villageLabel = 'गाव';
    addressLabel = 'घर क्रमांक, रस्ता, कॉलनी';
    landmarkLabel = 'जवळची खूण ( उदाहरणार्थ : गोपाळ मंदिराजवळ )';
    postOfficeLabel = 'पोस्ट ऑफिस';

    nameRequiredLabel = 'नाव';
    mobileRequiredLabel = 'मोबाइल नंबर';
    pincodeRequiredLabel = 'पिनकोड';
    stateRequiredLabel = 'राज्य';
    districtRequiredLabel = 'जिला';
    talukaRequiredLabel = 'तालुका';
    villageRequiredLabel = 'गाव';
    addressRequiredLabel = 'घर क्रमांक, रस्ता, कॉलनी';
    landmarkRequiredLabel = 'जवळची खूण';

    priceDetailsDiscountLabel = 'प्रॉडक्ट डिस्काउंट';
    priceDetailsFreeDeliveryLabel = 'डिलीवरी शुल्क';
    priceDetailsFreeDeliveryValueLabel = 'फ्री';
    priceDetailsTotalAmountLabel = 'एकूण रक्कम';

    cashOnDeliveryLabel = 'कैश ऑन डिलिव्हरी';
    placeOrderLabel = 'खरेदी करा';

    removeIconLabel = 'हटाए';
    addIconLabel = 'जोड़ें +';
    addedBtnLabel = 'जोड़ा गया ✓';
  }
  document.getElementById('product-header-id').innerHTML = productHeader;
  document.getElementById('discount-header-id').innerHTML = discountHeader;
  document.getElementById('delivery-address-header-id').innerHTML = deliveryAddressHeader;
  document.getElementById('ba-cod-price-header-id').innerHTML = priceDetailsHeader;

  document.getElementById('ba-cod-footer-place-order').innerHTML = placeOrderLabel;
  document.getElementById('ba-cod-footer-delivery-label').innerHTML = cashOnDeliveryLabel;

  document.getElementById('farmerName').placeholder = nameLabel;
  document.getElementById('farmerNameLabel').innerHTML = nameLabel;
  document.getElementById('farmerNameRequired').innerHTML = nameRequiredLabel;

  document.getElementById('farmerMobile').placeholder = mobileLabel;
  document.getElementById('farmerMobileLabel').innerHTML = mobileLabel;
  document.getElementById('farmerMobileRequired').innerHTML = mobileRequiredLabel;

  document.getElementById('alternateMobile').placeholder = alternateMobileLabel;
  document.getElementById('alternateMobileLabel').innerHTML = alternateMobileLabel;

  document.getElementById('baCodPincode').placeholder = pincodeLabel;
  document.getElementById('baCodPincodeLabel').innerHTML = pincodeLabel;
  document.getElementById('baCodPincodeRequired').innerHTML = pincodeRequiredLabel;

  document.getElementById('talukaName').placeholder = talukaLabel;
  document.getElementById('talukaNameLabel').innerHTML = talukaLabel;
  document.getElementById('talukaNameRequired').innerHTML = talukaRequiredLabel;

  document.getElementById('villageName').placeholder = villageLabel;
  document.getElementById('villageNameLabel').innerHTML = villageLabel;
  document.getElementById('villageNameRequired').innerHTML = villageRequiredLabel;

  document.getElementById('baAddress').placeholder = addressLabel;
  document.getElementById('baAddressLabel').innerHTML = addressLabel;
  document.getElementById('baAddressRequired').innerHTML = addressRequiredLabel;

  document.getElementById('baLandmark').placeholder = landmarkLabel;
  document.getElementById('baLandmarkLabel').innerHTML = landmarkLabel;
  document.getElementById('baLandmarkRequired').innerHTML = landmarkRequiredLabel;

  document.getElementById('baPostOffice').placeholder = postOfficeLabel;
  document.getElementById('baPostOfficeLabel').innerHTML = postOfficeLabel;

  document.getElementById('baCodStateSelectRequired').innerHTML = stateRequiredLabel;
  document.getElementById('baCodDistrictSelectRequired').innerHTML = districtRequiredLabel;

</script>

<script>
  function setBaItems() {
    let baUpdateCart = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
    let items = baUpdateCart.items;

    let quantityFb = document.getElementsByClassName('quantity__input')[0].value;
    sendBaFbEvents('InitiateCheckout', {currency: "INR", value: Number(items[0]?.final_line_price)/100, 'num_items': Number(quantityFb)});

    document.getElementById('product-count-id').innerHTML = items?.length;

    for (let i = 0; i < items?.length; i++) {
      const parentContainer = document.getElementById('product-info-div');
      parentContainer.replaceChildren();

      document.getElementById('ba-product-info-div-loader').style.display = 'none';

      let productMainDiv = document.createElement('div');
      document.getElementById('product-info-div').appendChild(productMainDiv);

      let productRowDiv = document.createElement('div');
      productRowDiv.className = "row align-items-center";
      productMainDiv.appendChild(productRowDiv);

      let productImageColDiv = document.createElement('div');
      productImageColDiv.className = "col-3 pr-0";
      productImageColDiv.style.position = "relative";
      productRowDiv.appendChild(productImageColDiv);

      let productImage = document.createElement('img');
      productImage.className = "ba-cod-product-img";
      productImage.src = items[i]?.image;
      productImage.alt = 'product image';
      // productImage.loading = "lazy";
      productImageColDiv.appendChild(productImage);

      let productImageQuantity = document.createElement('div');
      productImageQuantity.className = "ba-cod-product-img-quantity";
      productImageQuantity.innerHTML = document.getElementsByClassName('quantity__input')[0].value;
      productImageColDiv.appendChild(productImageQuantity);

      let productTitleColDiv = document.createElement('div');
      productTitleColDiv.className = "col-6 pr-0 pl-3";
      productRowDiv.appendChild(productTitleColDiv);

      let productTitle = document.createElement('div');
      productTitle.className = "ba-cod-product-title";
      productTitle.innerHTML = items[i]?.product_title?.length > 50 ? items[i]?.product_title?.slice(0,50) + '..' : items[i]?.product_title;
      productTitleColDiv.appendChild(productTitle);

      let productVariantTitle = document.createElement('div');
      productVariantTitle.className = "ba-cod-variant-info";
      productVariantTitle.innerHTML = items[i]?.variant_title?.length > 25 ? items[i]?.variant_title?.slice(0,25) + '..' : items[i]?.variant_title;
      productTitleColDiv.appendChild(productVariantTitle);

      let productPriceColDiv = document.createElement('div');
      productPriceColDiv.className = "col-3 pl-0";
      productPriceColDiv.style.paddingRight = "16px";
      productRowDiv.appendChild(productPriceColDiv);

      // Commenting out the discount percent off value
      // let productDiscount = document.createElement('div');
      // productDiscount.className = "ba-cod-product-discount";
      // productDiscount.innerHTML = '3% off';
      // productPriceColDiv.appendChild(productDiscount);

      let productPriceDiv = document.createElement('div');
      productPriceColDiv.appendChild(productPriceDiv);

      // Commenting out the slash (original) price
      // let productActualPrice = document.createElement('span');
      // productActualPrice.className = "ba-cod-actual-price";
      // productActualPrice.innerHTML = items[i]?.original_price ? `₹ ${Number(items[i]?.original_price)/100}` : '0';
      // productPriceDiv.appendChild(productActualPrice);

      let productSellingPrice = document.createElement('span');
      productSellingPrice.className = "ba-cod-selling-price";
      productSellingPrice.id = "ba-cod-main-product-price" + i;
      productSellingPrice.innerHTML = items[i]?.final_line_price ? `₹ ${Number(items[i]?.final_line_price)/100}` : '0';
      productPriceDiv.appendChild(productSellingPrice);
    }

    loadBaProductBundles();
    loadCouponCodes();
    resetCodFormFields();
    populatePriceDetailsCard();
  }

  function clearCartEmbed() {
    let requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };

    fetch(`/cart/clear.js`, requestOptions)
      .then(response => {
        if (response.status === 200) {
          // response.json().then(result => {
          // });
          addCartDetailsEmbed();
        } else {
          console.log('Unable to clear cart');
        }
      }).catch(error => {
      console.log('error: ', error);
    });
  }

  function addCartDetailsEmbed() {
    let items = JSON.parse(localStorage.getItem('baCodCartStorage'));

    if (items?.length > 0) {
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ 'items': items })
      }).then(res => res.json())
        .then(res => {
            console.log(res);
            let baBubbleIcon = document.getElementById('ba-cart-icon-value');
            if (baBubbleIcon) {
              baBubbleIcon.innerHTML = res?.items?.length;
            }
          }
        );
    }

    // resetting cart storage
    localStorage.removeItem('baCodCartStorage');
    localStorage.removeItem('baUpdateCartResponse');

    // resetting the main product cart values
    const parentContainer = document.getElementById('product-info-div');
    parentContainer.replaceChildren();
    document.getElementById('ba-product-info-div-loader').style.display = 'block';

    // resetting discount div card
    const discountDiv = document.getElementById('ba-cod-discount-div');
    const discountActiveDiv = document.getElementById('ba-active-coupon');
    discountDiv.replaceChildren();
    discountDiv.appendChild(discountActiveDiv);
    document.getElementById('ba-discount-coupon-div-loader').style.display = 'block';

    // resetting bundles values
    const bundlesDiv = document.getElementById('ba-cod-bundle-cards-div');
    bundlesDiv.replaceChildren();

    // resetting coupon discount apply loader
    document.getElementById('ba-cod-discount-loader').style.display = 'none';

    // reset coupon code
    localStorage.removeItem('BA_COD_Coupon_code');
    previousCouponCode = '';
    let resetActiveCouponCardEl = document.getElementById('ba-active-coupon');
    if (resetActiveCouponCardEl) {
      resetActiveCouponCardEl.style.display = 'none';
    }

    document.getElementById('ba-cod-create-order-button').disabled = false;

    document.getElementById('product-count-id').innerHTML = '';

    resetCodFormFields();

    selectedBundles = [];
  }

  function loadBaProductBundles() {
    selectedBundles = [];
    let requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };
    // let bundleVariant = '43829369078003';
    let baUpdateCart = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
    let items = baUpdateCart.items;
    let bundleVariant = items[0]?.id

    fetch(`https://lcrks.leanagri.com/third_parties/shopify_cod_app/api/v1/cod-bundles/?variant_id=${bundleVariant}&lang=${lang}`, requestOptions)
      .then(response => {
        if (response.status === 200) {
          response.json().then(result => {
            if (result?.data) {
              setBaProductBundles(result?.data);
            } else {
              document.getElementById('ba-cod-bundle-div').style.display = 'none';
            }
          });
        } else {
          console.log('Unable to fetch web bundle products');
          document.getElementById('ba-cod-bundle-div').style.display = 'none';
        }
      }).catch(error => {
      console.log('error: ', error);
      document.getElementById('ba-cod-bundle-div').style.display = 'none';
    });
  }

  function setBaProductBundles(bundles) {
    const bundlesDiv = document.getElementById('ba-cod-bundle-cards-div');
    bundlesDiv.replaceChildren();

    if (bundles?.length === 0) {
      document.getElementById('ba-cod-bundle-div').style.display = 'none';
    } else {
      bundles = bundles?.sort((a, b) => b?.priority_index - a?.priority_index);
      document.getElementById('ba-cod-bundle-div').style.display = 'block';
    }

    let bundleImagePlaceholder = 'https://leanconnect.s3.ap-south-1.amazonaws.com/shopify-static-images/product-img-placeholder.png';

    for (let i=0; i < bundles?.length; i++) {
      let bundleProductTitle = bundles[i]?.secondary_product?.product?.title;
      let bundleProductVariantTitle = bundles[i]?.secondary_product?.product?.variant_title;
      let bundleProductPrice = bundles[i]?.secondary_product?.product?.selling_price;
      let bundleProductDiscountPrice = bundles[i]?.price;
      let bundleDiscountPercent = ((bundleProductPrice - bundleProductDiscountPrice)/bundleProductPrice) * 100;
      bundleDiscountPercent = Math.floor(bundleDiscountPercent);
      let bundleDiscountedAmount = bundleProductPrice - bundleProductDiscountPrice;

      let bundleProductImage = bundleImagePlaceholder;
      if (bundles[i]?.secondary_product?.product?.images[0]?.media_url) {
        bundleProductImage = bundles[i]?.secondary_product?.product?.images[0]?.media_url;
      }


      let bundleCardColDiv = document.createElement('div');
      bundleCardColDiv.id = 'baBundleCard' + bundles[i]?.id;
      bundleCardColDiv.className = 'col-4 p-3 ba-cod-bundle-card mr-3';
      bundlesDiv.appendChild(bundleCardColDiv);

      let bundleCardImagePriceDiv = document.createElement('div');
      bundleCardImagePriceDiv.className = 'row align-items-center mb-2';
      bundleCardColDiv.appendChild(bundleCardImagePriceDiv);

      let bundleCardImageDiv = document.createElement('div');
      bundleCardImageDiv.className = 'col-6';
      bundleCardImagePriceDiv.appendChild(bundleCardImageDiv);

      let bundleCardImage = document.createElement('img');
      bundleCardImage.alt = 'product image';
      bundleCardImage.src = bundleProductImage;
      bundleCardImage.style.borderRadius = '6px';
      if (bundleImagePlaceholder === bundleProductImage) {
        bundleCardImage.style.width = '65%';
      } else {
        bundleCardImage.className = 'w-100';
      }
      bundleCardImageDiv.appendChild(bundleCardImage);

      let bundleCardPriceDiv = document.createElement('div');
      bundleCardPriceDiv.className = 'col-6 pl-0';
      bundleCardImagePriceDiv.appendChild(bundleCardPriceDiv);

      if (bundleDiscountPercent > 0) {
        let bundleCardDiscountPercent = document.createElement('div');
        bundleCardDiscountPercent.className = 'ba-cod-bundle-discount';
        bundleCardDiscountPercent.innerHTML = `${bundleDiscountPercent}% off`;
        bundleCardPriceDiv.appendChild(bundleCardDiscountPercent);
      }

      let bundleCardPrice = document.createElement('div');
      bundleCardPrice.className = 'ba-cod-bundle-price';
      bundleCardPrice.innerHTML = bundleProductDiscountPrice ? `₹ ${bundleProductDiscountPrice}` : '0';
      bundleCardPriceDiv.appendChild(bundleCardPrice);

      let bundleCardProductTitle = document.createElement('div');
      bundleCardProductTitle.className = "ba-cod-bundle-title";
      bundleCardProductTitle.innerHTML = bundleProductTitle?.length > 18 ? bundleProductTitle?.slice(0,18) + '..' : bundleProductTitle;
      bundleCardColDiv.appendChild(bundleCardProductTitle);

      let bundleCardProductVariantTitle = document.createElement('div');
      bundleCardProductVariantTitle.className = "ba-cod-bundle-title mt-1";
      bundleCardProductVariantTitle.innerHTML = bundleProductVariantTitle.length > 18 ? bundleProductVariantTitle?.slice(0,18) + '..' : bundleProductVariantTitle;
      bundleCardColDiv.appendChild(bundleCardProductVariantTitle);

      let bundleCardAddButtonDiv = document.createElement('div');
      bundleCardAddButtonDiv.className = "mt-2";
      bundleCardColDiv.appendChild(bundleCardAddButtonDiv);

      let bundleCardAddButton = document.createElement('button');
      bundleCardAddButton.className = "w-100 p-3 ba-cod-bundle-add-btn";
      bundleCardAddButton.id = "bundleAddBtn" + i;
      bundleCardAddButton.innerHTML = addIconLabel;
      bundleCardAddButton.addEventListener("click", function(){ onBaProductBundleClick(bundles[i], i); });
      bundleCardAddButtonDiv.appendChild(bundleCardAddButton);

    }
  }

  function onBaProductBundleClick(product, productIndex) {
    let bundleAddBtn = document.getElementById(`bundleAddBtn${productIndex}`);
    bundleAddBtn.disabled = true;
    bundleAddBtn.innerHTML = addedBtnLabel;
    bundleAddBtn.style.color = '#707890';
    bundleAddBtn.style.border = '1px solid #707890';
    let bundleProductPush = structuredClone(product);

    sendBaCodGEvents('BA_bundle_cart_added', {
        'from_frag': currentUrl1,
        'product_title': product?.secondary_product?.product?.title,
        'productId': product?.secondary_product?.shopify_id,
        'variantId': product?.secondary_product?.variant_id,
        'selling_price': product?.price,
    });

    bundleProductPush['selected'] = true;

    selectedBundles.push(bundleProductPush);
    let productCountHeader = Number(document.getElementById('product-count-id').innerHTML);
    document.getElementById('product-count-id').innerHTML = String(productCountHeader + 1);
    let selectedBundlesIndex = selectedBundles?.length - 1;

    let bundleProductTitle = product?.secondary_product?.product?.title;
    let bundleProductVariantTitle = product?.secondary_product?.product?.variant_title;
    let bundleProductPrice = product?.secondary_product?.product?.selling_price;
    let bundleProductDiscountPrice = product?.price;
    let bundleDiscountPercent = ((bundleProductPrice - bundleProductDiscountPrice)/bundleProductPrice) * 100;
    bundleDiscountPercent = Math.floor(bundleDiscountPercent);
    let bundleDiscountedAmount = bundleProductPrice - bundleProductDiscountPrice;

    let bundleProductImage = 'https://leanconnect.s3.ap-south-1.amazonaws.com/shopify-static-images/product-img-placeholder.png';

    if (product?.secondary_product?.product?.images[0]?.media_url) {
      bundleProductImage = product?.secondary_product?.product?.images[0]?.media_url;
    }

    let productMainDiv = document.createElement('div');
    productMainDiv.id = 'bundleCartRow' + selectedBundlesIndex;
    document.getElementById('product-info-div').appendChild(productMainDiv);

    let productRowDiv = document.createElement('div');
    productRowDiv.className = "row mt-3 align-items-center";
    productMainDiv.appendChild(productRowDiv);

    let productImageColDiv = document.createElement('div');
    productImageColDiv.className = "col-3 pr-0";
    productRowDiv.appendChild(productImageColDiv);

    let productImage = document.createElement('img');
    productImage.className = "ba-cod-product-img";
    productImage.src = bundleProductImage;
    productImage.alt = 'product image';
    // productImage.loading = "lazy";
    productImageColDiv.appendChild(productImage);

    let productTitleColDiv = document.createElement('div');
    productTitleColDiv.className = "col-6 pr-0 pl-3";
    productRowDiv.appendChild(productTitleColDiv);

    let productTitle = document.createElement('div');
    productTitle.className = "ba-cod-product-title";
    productTitle.innerHTML = bundleProductTitle?.length > 50 ? bundleProductTitle?.slice(0,50) + '..' : bundleProductTitle;
    productTitleColDiv.appendChild(productTitle);

    let productVariantTitle = document.createElement('div');
    productVariantTitle.className = "ba-cod-variant-info";
    productVariantTitle.innerHTML = bundleProductVariantTitle.length > 25 ? bundleProductVariantTitle?.slice(0,25) + '..' : bundleProductVariantTitle;
    productTitleColDiv.appendChild(productVariantTitle);

    // Remove icon to delete the product from cart
    let productRemoveIcon = document.createElement('div');
    productRemoveIcon.className = "mt-2";
    productTitleColDiv.appendChild(productRemoveIcon);

    let productRemoveIconBtn = document.createElement('button');
    productRemoveIconBtn.className = "btn btn-outline-danger";
    productRemoveIconBtn.addEventListener("click", function(){ onBaProductBundleRemoveClick(selectedBundlesIndex, productIndex); });
    productRemoveIcon.appendChild(productRemoveIconBtn);


    let productRemoveIconImg = document.createElement('img');
    productRemoveIconImg.src = "https://shopify-krushidukan-apis.s3.ap-south-1.amazonaws.com/ba-cod-form-images/ba-cod-remove-icon-2.png";
    productRemoveIconImg.alt = 'remove-icon';
    productRemoveIconImg.style.verticalAlign = 'middle';
    productRemoveIconImg.style.width = '18px';
    productRemoveIconBtn.appendChild(productRemoveIconImg);

    let productRemoveIconText = document.createElement('span');
    productRemoveIconText.className = "ba-cod-bundle-remove-btn";
    productRemoveIconText.innerHTML = ' ' + removeIconLabel;
    productRemoveIconBtn.appendChild(productRemoveIconText);


    let productPriceColDiv = document.createElement('div');
    productPriceColDiv.className = "col-3 pl-0";
    productPriceColDiv.style.paddingRight = "16px";
    productRowDiv.appendChild(productPriceColDiv);

    // Commenting out the discount percent off value
    if (bundleDiscountPercent > 0) {
      let productDiscount = document.createElement('div');
      productDiscount.className = "ba-cod-product-discount";
      productDiscount.innerHTML = `${bundleDiscountPercent}% off`;
      productPriceColDiv.appendChild(productDiscount);
    }

    let productPriceDiv = document.createElement('div');
    productPriceColDiv.appendChild(productPriceDiv);

    // Commenting out the slash (original) price
    if (bundleProductPrice > 0) {
      let productActualPrice = document.createElement('span');
      productActualPrice.className = "ba-cod-actual-price";
      productActualPrice.innerHTML = bundleProductPrice ? `₹ ${bundleProductPrice}` : '0';
      productPriceDiv.appendChild(productActualPrice);
    }

    let productSellingPrice = document.createElement('span');
    productSellingPrice.className = "ba-cod-selling-price";
    productSellingPrice.innerHTML = bundleProductDiscountPrice ? `₹ ${bundleProductDiscountPrice}` : '0';
    productPriceDiv.appendChild(productSellingPrice);


    // Adding the product to the price card
    let bundlePriceItemsMainDiv = document.getElementById('ba-cod-price-details-items');
    let priceItemsRow = document.createElement('div');
    priceItemsRow.className = 'row mt-2 pb-2 align-items-center ba-cod-price-details-items';
    priceItemsRow.id = 'bundlePriceRow' + selectedBundlesIndex;
    bundlePriceItemsMainDiv.appendChild(priceItemsRow);

    let priceItemsCol1 = document.createElement('div');
    priceItemsCol1.className = 'col-9';
    priceItemsCol1.innerHTML = bundleProductTitle?.length > 34 ? bundleProductTitle?.slice(0,34) + '..' : bundleProductTitle;
    priceItemsRow.appendChild(priceItemsCol1);

    let priceItemsCol2 = document.createElement('div');
    priceItemsCol2.className = 'col-3 text-right';
    priceItemsCol2.innerHTML = bundleProductDiscountPrice ? `₹ ${bundleProductDiscountPrice}` : '0';
    priceItemsRow.appendChild(priceItemsCol2);

    // Updating price details card
    let bundleOrderTotalValue = document.getElementById('ba-price-details-total-value').innerHTML;
    bundleOrderTotalValue = bundleOrderTotalValue?.replace('₹ ', '');

    bundleOrderTotalValue = Number(bundleOrderTotalValue) + bundleProductDiscountPrice;
    bundleOrderTotalValue = Number.isInteger(bundleOrderTotalValue) ? Number(bundleOrderTotalValue) : bundleOrderTotalValue.toFixed(2);
    document.getElementById('ba-price-details-total-value').innerHTML = `₹ ${bundleOrderTotalValue}`;
    document.getElementById('ba-cod-footer-total-amount').innerHTML = `₹ ${bundleOrderTotalValue}`;
  }

  function onBaProductBundleRemoveClick(index, productIndex) {
    sendBaCodGEvents('BA_bundle_cart_removal', {
      'from_frag': currentUrl1,
      'product_title': selectedBundles[index]?.secondary_product?.product?.title,
      'productId': selectedBundles[index]?.secondary_product?.shopify_id,
      'variantId': selectedBundles[index]?.secondary_product?.variant_id,
      'selling_price': selectedBundles[index]?.price,
    });
    selectedBundles[index].selected = false;

    let bundleAddBtn = document.getElementById(`bundleAddBtn${productIndex}`);
    bundleAddBtn.disabled = false;
    bundleAddBtn.innerHTML = addIconLabel;
    bundleAddBtn.style.color = '#0A8047';
    bundleAddBtn.style.border = '1px solid #0A8047';

    let productCountHeader = Number(document.getElementById('product-count-id').innerHTML);
    document.getElementById('product-count-id').innerHTML = String(productCountHeader - 1);
    document.getElementById(`bundleCartRow${index}`).style.display = 'none';
    document.getElementById(`bundlePriceRow${index}`).style.display = 'none';

    // Updating price details card
    let bundleOrderTotalValue = document.getElementById('ba-price-details-total-value').innerHTML;
    bundleOrderTotalValue = bundleOrderTotalValue?.replace('₹ ', '');

    bundleOrderTotalValue = Number(bundleOrderTotalValue) - selectedBundles[index]?.price;
    bundleOrderTotalValue = Number.isInteger(bundleOrderTotalValue) ? Number(bundleOrderTotalValue) : bundleOrderTotalValue.toFixed(2);
    document.getElementById('ba-price-details-total-value').innerHTML = `₹ ${bundleOrderTotalValue}`;
    document.getElementById('ba-cod-footer-total-amount').innerHTML = `₹ ${bundleOrderTotalValue}`;
  }

  function getBundlesTotalPrice() {
    let bundleCurrentPrice = 0;
    for (let i=0; i<selectedBundles?.length; i++) {
      if (selectedBundles[i]?.enabled && selectedBundles[i]?.selected) {
        bundleCurrentPrice = bundleCurrentPrice + selectedBundles[i]?.price;
      }
    }
    return bundleCurrentPrice;
  }

  function getBundlesActualTotalPriceWithoutDiscount() {
    let bundleFullPrice = 0;
    for (let i=0; i<selectedBundles?.length; i++) {
      if (selectedBundles[i]?.enabled && selectedBundles[i]?.selected) {
        bundleFullPrice = bundleFullPrice + selectedBundles[i]?.secondary_product?.product?.selling_price;
      }
    }
    return bundleFullPrice;
  }


  function loadCouponCodes() {
    let requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };
    fetch(`https://s3.ap-south-1.amazonaws.com/shopify-krushidukan-apis/price_rules/en/coupons/price_rule_list.json`, requestOptions)
      .then(response => {
        if (response.status === 200) {
          response.json().then(result => {
            setDiscountCoupons(result?.data);
          });
        } else {
          console.log('Unable to fetch discount coupons');
          document.getElementById('ba-discount-coupon-div').style.display = 'none';
          document.getElementById('ba-discount-div-separator').setAttribute('style', 'display:none !important');
        }
      }).catch(error => {
      console.log('error: ', error);
      document.getElementById('ba-discount-coupon-div').style.display = 'none';
      document.getElementById('ba-discount-div-separator').setAttribute('style', 'display:none !important');
    });
  }

  function setDiscountCoupons(discounts) {
    const discountDiv = document.getElementById('ba-cod-discount-div');
    const discountActiveDiv = document.getElementById('ba-active-coupon');

    discountDiv.replaceChildren();
    discountDiv.appendChild(discountActiveDiv);
    document.getElementById('ba-discount-coupon-div-loader').style.display = 'none';

    let baUpdateCart = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
    let discountCouponsCartItemTotalValue = Number(baUpdateCart?.total_price/100);

    let finalCodes = [];

    for (let i = 0; i < discounts?.length; i++) {
      let today = new Date();
      today.setHours(0,0,0);
      let endDate = null;
      if (discounts[i]?.ends_at !== 'None') {
        endDate = new Date(discounts[i]?.ends_at);
      }
      if ((endDate >= today || endDate === null) && discountCouponsCartItemTotalValue > discounts[i]?.min_amount_rule ) {
        finalCodes.push(discounts[i]);
      }
    }

    if (finalCodes?.length === 0) {
      document.getElementById('ba-discount-coupon-div').style.display = 'none';
      document.getElementById('ba-discount-div-separator').setAttribute('style', 'display:none !important');
    } else {
      finalCodes = finalCodes?.sort((a, b) => b?.priority_index - a?.priority_index);
      document.getElementById('ba-discount-coupon-div').style.display = 'block';
      document.getElementById('ba-discount-div-separator').setAttribute('style', 'display:block !important');
    }

    for (let i=0; i < finalCodes?.length; i++) {
      let coupon_title_translation = '';
      let coupon_sub_title_translation = '';
      if (lang === 'en') {
        coupon_title_translation = finalCodes[i]?.coupon_title_en;
        coupon_sub_title_translation = finalCodes[i]?.coupon_sub_title_en;
      } else if (lang === 'mr') {
        coupon_title_translation = finalCodes[i]?.coupon_title_mr;
        coupon_sub_title_translation = finalCodes[i]?.coupon_sub_title_mr;
      } else {
        coupon_title_translation = finalCodes[i]?.coupon_title_hi;
        coupon_sub_title_translation = finalCodes[i]?.coupon_sub_title_hi;
      }

      console.log(coupon_title_translation);
      console.log(coupon_sub_title_translation);

      let discountCardColDiv = document.createElement('div');
      discountCardColDiv.id = finalCodes[i]?.title;
      discountCardColDiv.className = 'col-auto p-3 ba-cod-discount-card mr-2';
      discountDiv.appendChild(discountCardColDiv);

      let discountTitleDiv = document.createElement('div');
      discountTitleDiv.className = 'ba-cod-discount-title';
      discountCardColDiv.appendChild(discountTitleDiv);

      let discountTitle1 = document.createElement('span');
      discountTitle1.className = 'ba-cod-discount-title1 mr-3';
      discountTitle1.innerHTML = coupon_title_translation;
      discountTitleDiv.appendChild(discountTitle1);

      let discountTitle2 = document.createElement('span');
      discountTitle2.className = 'ba-cod-discount-title2';
      discountTitle2.innerHTML = coupon_sub_title_translation;
      discountTitleDiv.appendChild(discountTitle2);

      let discountInfoApplyDiv = document.createElement('div');
      discountInfoApplyDiv.className = 'row m-1 align-items-center justify-content-between';
      discountCardColDiv.appendChild(discountInfoApplyDiv);

      let discountMainTitle = document.createElement('div');
      discountMainTitle.className = 'col-auto ba-cod-discount-coupon';
      discountMainTitle.innerHTML = finalCodes[i]?.title;
      discountInfoApplyDiv.appendChild(discountMainTitle);

      let discountApplyBtn = document.createElement('div');
      discountApplyBtn.className = 'col-auto ba-cod-discount-apply-btn';
      discountApplyBtn.innerHTML = applyCouponBtn;
      discountApplyBtn.addEventListener("click", function(){ applyCouponCodes(finalCodes[i]?.title, true); });
      discountInfoApplyDiv.appendChild(discountApplyBtn);

      // Discount coupon card click at card level
      discountCardColDiv.addEventListener("click", function(){ applyCouponCodes(finalCodes[i]?.title, true); });
    }

    // applying first discount code
    if (finalCodes?.length > 0) {
      applyCouponCodes(finalCodes[0]?.title, false);
    }
  }
</script>

<script>
  let previousCouponCode = '';
   function applyCouponCodes(couponCode, scrollFlag) {
     document.getElementById('ba-cod-discount-loader').style.display = 'block';
     if (!previousCouponCode) {
       previousCouponCode = couponCode;
     }
     let shopify_features_script = document.querySelector("script[id='shopify-features']");
     let shopify_features_json = JSON.parse(shopify_features_script.innerHTML);

     // console.log(shopify_features_json);

     let baUpdateCart = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
     let items = baUpdateCart.items;
     let lineItems = [];

     // Resetting price details card discount and total amount
     document.getElementById('ba-price-details-discount-value').innerHTML = `0`;
     document.getElementById('ba-price-details-discount-row').style.display = 'none';


     // Resetting total amount with the cart and bundles
     let bundleCartOrderTotalValue = getBundlesTotalPrice();
     let priceDetailsTotalValueWithoutBundle = Number(baUpdateCart?.total_price/100);
     let priceDetailsTotalValue = Number(baUpdateCart?.total_price/100);
     priceDetailsTotalValue = priceDetailsTotalValue + bundleCartOrderTotalValue;

     sendBaCodGEvents('BA_cart_cc_clk', {
       'from_frag': currentUrl1,
       'discount_coupon': couponCode,
       'order_value': priceDetailsTotalValueWithoutBundle,
     });

     document.getElementById('ba-price-details-total-value').innerHTML = `₹ ${priceDetailsTotalValue}`;
     document.getElementById('ba-cod-footer-total-amount').innerHTML = `₹ ${priceDetailsTotalValue}`;

     if (previousCouponCode) {
       let activeCouponEl = document.getElementById(previousCouponCode);
       if (activeCouponEl) {
         activeCouponEl.style.display = 'block';
       }
     }

     let activeCouponCardEl = document.getElementById('ba-active-coupon');
     if (activeCouponCardEl) {
       activeCouponCardEl.style.display = 'none';
     }

     for (let i = 0; i < items?.length; i++) {
       let variant = {'variant_id': items[i]?.variant_id, 'quantity': items[i]?.quantity, 'properties': {}};
       lineItems.push(variant);
     }

    let payload = {
      "checkout": {
        "discount_code": couponCode,
        "line_items": lineItems,
        "presentment_currency": "INR"
      }
    }

    fetch('/wallets/checkouts/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'authorization': 'Basic ' + btoa(shopify_features_json.accessToken)
      },
      body: JSON.stringify(payload)
    }).then(response => {
      if (response.status === 201) {
        response.json().then(result => {
          if (result?.checkout?.applied_discount?.applicable) {
            // console.log('Wallet values: ', result);
            document.getElementById(couponCode).style.display = 'none';
            document.getElementById('ba-active-coupon').style.display = 'block';
            document.getElementById('ba-cod-saved-amount').innerHTML = `Saved ₹${result?.checkout?.total_discount_amount?.replace('.00', '')}`;
            document.getElementById('ba-cod-saved-amount-line2').innerHTML = 'with discount Coupon';
            document.getElementById('ba-cod-applied-coupon-content').innerHTML = `${couponCode} Applied!`;

            document.getElementById('ba-price-details-discount-value').innerHTML = `-₹ ${result?.checkout?.total_discount_amount?.replace('.00', '')}`;

            bundleCartOrderTotalValue = getBundlesTotalPrice();
            let priceDetailsWalletTotalValue = Number(result?.checkout?.total_price?.replace('.00', ''));
            priceDetailsWalletTotalValue = priceDetailsWalletTotalValue + bundleCartOrderTotalValue;

            document.getElementById('ba-price-details-total-value').innerHTML = `₹ ${priceDetailsWalletTotalValue}`;
            document.getElementById('ba-cod-footer-total-amount').innerHTML = `₹ ${priceDetailsWalletTotalValue}`;
            document.getElementById('ba-price-details-discount-row').style.display = 'flex';

            previousCouponCode = couponCode;
            document.getElementById('ba-cod-discount-loader').style.display = 'none';

            if (scrollFlag) {
              document.getElementById('ba-active-coupon').scrollIntoView({
                behavior: 'smooth'
              });
            }

            localStorage.setItem('BA_COD_Coupon_code', couponCode);
          } else {
            console.log('Coupon not applicable');
            document.getElementById('ba-cod-discount-loader').style.display = 'none';
            localStorage.removeItem('BA_COD_Coupon_code');
          }
        });
      } else {
        console.log('Unable to fetch wallet');
        document.getElementById('ba-cod-discount-loader').style.display = 'none';
        localStorage.removeItem('BA_COD_Coupon_code');
      }
    }).catch(error => {
      console.log('error: ', error);
      document.getElementById('ba-cod-discount-loader').style.display = 'none';
      localStorage.removeItem('BA_COD_Coupon_code');
    });
  }
</script>

<script>
  let stateId = '';
  let districtId = '';
  let stateName = '';
  let districtName = '';
  let stateNameEn = '';
  let districtNameEn = '';
  let numericalNumberRegex = /^[0-9]+$/;

  let stateList = [];

  fetch('https://cached-bharatagri-apis.s3.ap-south-1.amazonaws.com/location/state_list/en/state/state_list.json', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    }
  }).then(response => {
    response.json().then( result => {
      stateList = result?.data;
      setStates();
    });
  }).catch(error => {
    console.log('Unable to get states : ', error);
  });

  function setStates() {
    const stateDiv = document.getElementById('baCodStateOptions');
    stateDiv.replaceChildren();

    for (let i=0; i < stateList?.length; i++) {
      let stateName = lang === 'en' ? stateList[i]?.name_en : ( lang === 'mr' ? stateList[i]?.name_mr : stateList[i]?.name_hi);

      let stateOptionsBtn = document.createElement('button');
      stateOptionsBtn.className = 'dropdown-item';
      stateOptionsBtn.type = 'button';
      stateOptionsBtn.innerHTML = stateName;
      stateOptionsBtn.addEventListener("click", function(){ onStateClick(stateList[i]?.id, stateName, stateList[i]?.name_en); });
      stateDiv.appendChild(stateOptionsBtn);
    }
  }


  function resetCodFormFields() {
    resetLocationFields();

    document.getElementById('farmerName').value = '';
    document.getElementById('farmerMobile').value = '';
    document.getElementById('alternateMobile').value = '';
    document.getElementById('baCodPincode').value = '';
    document.getElementById('baAddress').value = '';
    document.getElementById('baLandmark').value = '';
    document.getElementById('baPostOffice').value = '';

    resetFormFieldsValidation();
  }

  function resetLocationFields() {
    stateId = '';
    districtId = '';
    stateName = '';
    stateNameEn = '';
    districtName = '';
    districtNameEn = '';
    document.getElementById('baCodStateSelect').innerHTML = stateLabel;
    document.getElementById('baCodStateSelectLabel').innerHTML = stateLabel;
    document.getElementById('baCodDistrictSelectLabel').innerHTML = districtLabel;
    document.getElementById('baCodDistrictSelectLabel2').innerHTML = districtLabel;

    resetTalukaAndVillage();
  }

  function resetTalukaAndVillage() {
    document.getElementById('talukaName').value = '';
    document.getElementById('villageName').value = '';
  }

  function resetFormFieldsValidation() {
    document.getElementById('farmerName').classList.remove('ba-mandatory-field-border');
    document.getElementById('farmerMobile').classList.remove('ba-mandatory-field-border');
    document.getElementById('baCodPincode').classList.remove('ba-mandatory-field-border');
    document.getElementById('baCodStateSelect').classList.remove('ba-mandatory-field-border');
    document.getElementById('baCodDistrictSelect').classList.remove('ba-mandatory-field-border');
    document.getElementById('talukaName').classList.remove('ba-mandatory-field-border');
    document.getElementById('villageName').classList.remove('ba-mandatory-field-border');
    document.getElementById('baAddress').classList.remove('ba-mandatory-field-border');
    document.getElementById('baLandmark').classList.remove('ba-mandatory-field-border');

    document.getElementById('farmerNameRequired').style.display = 'none';
    document.getElementById('farmerMobileRequired').style.display = 'none';
    document.getElementById('baCodPincodeRequired').style.display = 'none';
    document.getElementById('baCodStateSelectRequired').style.display = 'none';
    document.getElementById('baCodDistrictSelectRequired').style.display = 'none';
    document.getElementById('talukaNameRequired').style.display = 'none';
    document.getElementById('villageNameRequired').style.display = 'none';
    document.getElementById('baAddressRequired').style.display = 'none';
    document.getElementById('baLandmarkRequired').style.display = 'none';
  }

  function onStateClick(id, name, nameEn) {
    document.getElementById('baCodStateSelect').innerHTML = name?.length > 18 ? name?.slice(0,18) + '..' : name;
    document.getElementById('baCodDistrictSelectLabel').innerHTML = districtLabel;
    stateId = id;
    stateName = name;
    stateNameEn = nameEn;
    districtId = '';
    districtName = '';
    districtNameEn = '';
    loadDistricts(id);
  }

  function onDistrictClick(id, name, nameEn) {
    districtId = id;
    districtName = name;
    districtNameEn = nameEn;
    document.getElementById('baCodDistrictSelectLabel').innerHTML = name?.length > 18 ? name?.slice(0,18) + '..' : name;
  }

  function loadDistricts(stateId) {
    document.getElementById('ba-cod-district-loader').style.display = 'inline-block';
    let requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };
    fetch(`https://s3.ap-south-1.amazonaws.com/cached-bharatagri-apis/location/district_list/en/${stateId}/district_list.json`, requestOptions)
      .then(response => {
        if (response.status === 200) {
          response.json().then(result => {
            document.getElementById('ba-cod-district-loader').style.display = 'none';
            setDistricts(result?.data);
          });
        } else {
          console.log('Unable to fetch district list');
          document.getElementById('ba-cod-district-loader').style.display = 'none';
        }
      }).catch(error => {
      document.getElementById('ba-cod-district-loader').style.display = 'none';
      console.log('error: ', error);
    });
  }

  function setDistricts(districts) {
    const districtDiv = document.getElementById('baCodDistrictOptions');
    districtDiv.replaceChildren();

    for (let i=0; i < districts?.length; i++) {
      let districtName = lang === 'en' ? districts[i]?.name_en : ( lang === 'mr' ? districts[i]?.name_mr : districts[i]?.name_hi);

      let districtOptionsBtn = document.createElement('button');
      districtOptionsBtn.className = 'dropdown-item';
      districtOptionsBtn.type = 'button';
      districtOptionsBtn.innerHTML = districtName;
      districtOptionsBtn.addEventListener("click", function(){ onDistrictClick(stateList[i]?.id, districtName, districts[i]?.name_en); });
      districtDiv.appendChild(districtOptionsBtn);
    }
  }

  function createOrderObject() {
    document.getElementById('ba-cod-create-order-button').disabled = true;

    let name = document.getElementById('farmerName');
    let mobile = document.getElementById('farmerMobile');
    let alternateMobile = document.getElementById('alternateMobile');
    let pincode = document.getElementById('baCodPincode');
    let stateField = document.getElementById('baCodStateSelect');
    let districtField = document.getElementById('baCodDistrictSelect');
    let state = stateNameEn;
    let district = districtNameEn;
    let taluka = document.getElementById('talukaName');
    let village = document.getElementById('villageName');
    let address = document.getElementById('baAddress');
    let landmark = document.getElementById('baLandmark');
    let postOffice = document.getElementById('baPostOffice');

    let validationError = false;

    resetFormFieldsValidation();

    if (!(name.value)) {
      name.classList.add('ba-mandatory-field-border');
      document.getElementById('farmerNameRequired').style.display = 'block';
      validationError = true;
      baScrollToId('farmerName');
    }

    if (mobile?.value?.length !== 10 || !(mobile?.value?.match(numericalNumberRegex))) {
      mobile.classList.add('ba-mandatory-field-border');
      document.getElementById('farmerMobileRequired').style.display = 'block';
      if (!validationError) {baScrollToId('farmerMobile');}
      validationError = true;
    }

    if (pincode?.value?.length !== 6 || !(pincode?.value?.match(numericalNumberRegex))) {
      pincode.classList.add('ba-mandatory-field-border');
      document.getElementById('baCodPincodeRequired').style.display = 'block';
      if (!validationError) {baScrollToId('baCodPincode');}
      validationError = true;
    }

    if (!state) {
      stateField.classList.add('ba-mandatory-field-border');
      document.getElementById('baCodStateSelectRequired').style.display = 'block';
      if (!validationError) {baScrollToId('baCodStateSelect');}
      validationError = true;
    }

    if (!district) {
      districtField.classList.add('ba-mandatory-field-border');
      document.getElementById('baCodDistrictSelectRequired').style.display = 'block';
      if (!validationError) {baScrollToId('baCodDistrictSelect');}
      validationError = true;
    }

    // if (!(taluka.value)) {
    //   taluka.classList.add('ba-mandatory-field-border');
    //   document.getElementById('talukaNameRequired').style.display = 'block';
    // if (!validationError) {baScrollToId('talukaName');}
    //   validationError = true;
    // }

    // if (!(village.value)) {
    //   village.classList.add('ba-mandatory-field-border');
    //   document.getElementById('villageNameRequired').style.display = 'block';
    // if (!validationError) {baScrollToId('villageName');}
    //   validationError = true;
    // }

    if (!(address.value)) {
      address.classList.add('ba-mandatory-field-border');
      document.getElementById('baAddressRequired').style.display = 'block';
      if (!validationError) {baScrollToId('baAddress');}
      validationError = true;
    }

    // if (!(landmark.value)) {
    //   landmark.classList.add('ba-mandatory-field-border');
    //   document.getElementById('baLandmarkRequired').style.display = 'block';
    // if (!validationError) {baScrollToId('baLandmark');}
    //   validationError = true;
    // }

    if (!validationError) {
      let nameValue = name?.value;
      let mobileValue = mobile?.value;
      let alternateMobileValue = alternateMobile?.value ? alternateMobile?.value : '';
      let  pincodeValue = pincode?.value;
      let stateValue = state;
      let districtValue = district;
      let talukaValue = taluka?.value ? taluka?.value : '';
      let villageValue = village?.value ? village?.value : '';
      let addressValue = address?.value;
      let landmarkValue = landmark?.value ? landmark?.value : '';
      let postOfficeValue = postOffice?.value ? postOffice?.value : '';

      let baOrder = {
        name: name?.value,
        mobile: mobile?.value,
        alternateMobile: alternateMobile?.value ? alternateMobile?.value : '',
        pincode: pincode?.value,
        state: state,
        district: district,
        taluka: talukaValue,
        village: villageValue,
        address: address?.value,
        landmark: landmarkValue,
        postOffice: postOfficeValue
      }

      let noteAttributesArray = [];

      for (let [key, value] of Object.entries(baOrder)) {
        let noteAttributesObject = {"name": key, "value": value};
        noteAttributesArray.push(noteAttributesObject);
      }

      let createOrderDiscount = document.getElementById('ba-price-details-discount-value').innerHTML;
      createOrderDiscount = createOrderDiscount?.replace('-₹ ', '');

      // Calculating total amount with the cart and bundles for create order
      let createCartBundleOrderTotalValue = getBundlesActualTotalPriceWithoutDiscount();
      let createCartBundleOrderTotalDiscountedValue = getBundlesTotalPrice();
      let createCartFinalTotalValue = 0;
      let createCartBundleTotalDiscount = 0;

      let baUpdateCart = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
      let createOrderCartItemTotalValue = Number(baUpdateCart?.total_price/100);
      createCartFinalTotalValue = createCartBundleOrderTotalValue + createOrderCartItemTotalValue;
      let createOrderTotalValue = createCartFinalTotalValue;
      createCartBundleTotalDiscount = createCartBundleOrderTotalValue - createCartBundleOrderTotalDiscountedValue;

      let createOrderDiscountCode = '';
      if (Number(createOrderDiscount) > 0) {
        createOrderDiscountCode = localStorage.getItem('BA_COD_Coupon_code');
      }

      let baUpdateCartCreateOrder = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
      let createOrderItems = baUpdateCartCreateOrder.items;
      let createOrderLineItems = [];

      for (let i = 0; i < createOrderItems?.length; i++) {
        let variant = {'variant_id': createOrderItems[i]?.variant_id, 'quantity': createOrderItems[i]?.quantity, 'properties': {}};
        createOrderLineItems.push(variant);
      }

      for (let i = 0; i < selectedBundles?.length; i++) {
        if (selectedBundles[i]?.enabled && selectedBundles[i]?.selected) {
          let variant = {'variant_id': selectedBundles[i]?.secondary_product?.variant_id, 'quantity': 1, 'properties': {}};
          createOrderLineItems.push(variant);
        }
      }

      // draft product variant info test - draft order
      // let testDraftVariant = {
      //   'variant_id': 47264201310529,
      //   'quantity': 1,
      //   'properties': {},
      // }
      // createOrderLineItems.push(testDraftVariant);

      let baO2 = {
        "order": {
          "line_items":createOrderLineItems,
          "customer": {
            "first_name": nameValue,
          },
          // "email": `+91${mobileValue}@bharatagri.co`,
          "phone": `+91${mobileValue}`,
          "shipping_address": {
            "first_name": nameValue,
            "last_name": '-',
            "address1": addressValue,
            "phone": `+91${mobileValue}`,
            "city": districtValue,
            "province": stateValue,
            "country": "India",
            "zip": pincodeValue
          },
          "billing_address": {
            "first_name": nameValue,
            "last_name": '-',
            "address1": addressValue,
            "phone": `+91${mobileValue}`,
            "city": districtValue,
            "province": stateValue,
            "country": "India",
            "zip": pincodeValue
          },
          "financial_status": "pending",
          "transactions": [
            {
              "kind": "sale",
              "status": "pending",
              "amount": createOrderTotalValue,
              "gateway": "Cash on Delivery (COD)",
              "processing_method": "manual"
            }
          ],
          "tags": "BharatAgri COD Form",
          "note_attributes": noteAttributesArray
        }
      }

      if (Number(createOrderDiscount) > 0 || createCartBundleTotalDiscount > 0) {
        // Bundle Discounts logic
        let couponText = createOrderDiscountCode ? createOrderDiscountCode : '';
        if (createCartBundleTotalDiscount > 0) {
          couponText = couponText ? couponText + ', BA Custom Bundles Discount' : 'BA Custom Bundles Discount';
        }

        let couponDiscount = Number(createOrderDiscount) > 0 ? Number(createOrderDiscount) : 0;
        couponDiscount = couponDiscount + createCartBundleTotalDiscount;

        baO2["order"]["discount_codes"] = [
          {
            "code": couponText,
            "amount": couponDiscount
          }
        ]
      }

      fetch('https://lcrks.leanagri.com/third_parties/shopify_cod_app/api/v1/create-order/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(baO2)
      }).then(response => {
        if (response.status === 201) {
          response.json().then( result => {
            sendBaCodGEvents('BA_cod_ordered', {
              'from_frag': currentUrl1,
              'order_value': createOrderTotalValue,
              'ba_phone_number': mobileValue
            });
            sendBaFbEvents('Purchase', {currency: "INR", value: createOrderTotalValue, num_items: createOrderLineItems?.length});
            document.getElementById('ba-cod-form-overlay-loader').style.display = 'block';
            window.open(result?.order?.order_status_url, '_self');
          });
        } else {
          document.getElementById('ba-cod-create-order-button').disabled = false;
        }
      }).catch(error => {
        console.log('error: ', error);
        document.getElementById('ba-cod-create-order-button').disabled = false;
      });

      // dev store api call to create order
      // fetch('/admin/api/2021-10/orders.json', {
      //   method: 'POST',
      //   headers: {
      //     'Content-Type': 'application/json',
      //     'X-Shopify-Access-Token': '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'
      //   },
      //   body: JSON.stringify(baO2)
      // }).then(response => {
      //   if (response.status === 201) {
      //     response.json().then( result => {
      //       document.getElementById('ba-cod-form-overlay-loader').style.display = 'block';
      //       window.open(result?.order?.order_status_url, '_self');
      //     });
      //   } else {
      //     document.getElementById('ba-cod-create-order-button').disabled = false;
      //   }
      // }).catch(error => {
      //   console.log('error: ', error);
      //   document.getElementById('ba-cod-create-order-button').disabled = false;
      // });

    } else {
      document.getElementById('ba-cod-create-order-button').disabled = false;
    }
  }

  // Interval to reset values and mobile validation

  // let mobile = document.getElementById('farmerMobile');
  // mobile.addEventListener('keydown', (event) => {
  //   let arr = [];
  //   let kk = event.which;
  //
  //   for (let i = 48; i < 58; i++)
  //     arr.push(i);
  //
  //   arr.push(8);
  //
  //   if (!(arr.indexOf(kk)>=0))
  //     event.preventDefault();
  // });

  function baScrollToId(id) {
    document.getElementById(id).scrollIntoView({
      behavior: 'smooth'
    });
  }

  setInterval(() => {
    let name = document.getElementById('farmerName');
    let mobile = document.getElementById('farmerMobile');
    let pincode = document.getElementById('baCodPincode');
    let stateField = document.getElementById('baCodStateSelect');
    let districtField = document.getElementById('baCodDistrictSelect');
    let state = stateName;
    let district = districtName;
    let taluka = document.getElementById('talukaName');
    let village = document.getElementById('villageName');
    let address = document.getElementById('baAddress');
    let landmark = document.getElementById('baLandmark');


    if (name.value) {
      name.classList.remove('ba-mandatory-field-border');
      document.getElementById('farmerNameRequired').style.display = 'none';
    }

    if (mobile?.value?.length === 10 && (mobile?.value?.match(numericalNumberRegex))) {
      mobile.classList.remove('ba-mandatory-field-border');
      document.getElementById('farmerMobileRequired').style.display = 'none';
    }

    if (pincode?.value?.length === 6 && (pincode?.value?.match(numericalNumberRegex))) {
      pincode.classList.remove('ba-mandatory-field-border');
      document.getElementById('baCodPincodeRequired').style.display = 'none';
    }

    if (state) {
      stateField.classList.remove('ba-mandatory-field-border');
      document.getElementById('baCodStateSelectRequired').style.display = 'none';
    }

    if (district) {
      districtField.classList.remove('ba-mandatory-field-border');
      document.getElementById('baCodDistrictSelectRequired').style.display = 'none';
    }

    if (taluka.value) {
      taluka.classList.remove('ba-mandatory-field-border');
      document.getElementById('talukaNameRequired').style.display = 'none';
    }

    if (village.value) {
      village.classList.remove('ba-mandatory-field-border');
      document.getElementById('villageNameRequired').style.display = 'none';
    }

    if (address.value) {
      address.classList.remove('ba-mandatory-field-border');
      document.getElementById('baAddressRequired').style.display = 'none';
    }

    if (landmark.value) {
      landmark.classList.remove('ba-mandatory-field-border');
      document.getElementById('baLandmarkRequired').style.display = 'none';
    }
  }, 2500);
</script>

<script>
  calculateBaCodDeliveryDates();
  function calculateBaCodDeliveryDates() {
    let someDate = new Date();
    let numberOfDaysToAdd = 4;
    let result = someDate.setDate(someDate.getDate() + numberOfDaysToAdd);
    result = new Date(result);
    getBaCodDeliveryFormatDate(result);
  }

  function getBaCodDeliveryFormatDate(dDate) {
    dDate = new Date(dDate);
    let weekEn = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');
    let weekHi = new Array('रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरुवार', 'शुक्रवार', 'शनिवार');
    let weekMr = new Array('रविवार', 'सोमवार', 'मंगळवार', 'बुधवार', 'गुरुवारी', 'शुक्रवार', 'शनिवार');
    let monthEn = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    let monthHi = ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'];
    let monthMr = ['जानेवारी', 'फेब्रुवारी', 'मार्च', 'एप्रिल', 'मे', 'जून', 'जुलै', 'ऑगस्ट', 'सप्टेंबर', 'ऑक्टोबर', 'नोव्हेंबर', 'डिसेंबर'];
    let day = '';
    let month = '';
    let currentUrl = window.location.href;
    currentUrl = currentUrl.toString();
    if (currentUrl?.includes('.com/en')) {
      day = weekEn[dDate.getDay()];
      month = monthEn[dDate.getMonth()];
      document.getElementById('ba-cod-delivery-days-label').innerHTML = ' FREE Delivery';
    } else if (currentUrl?.includes('.com/mr')) {
      day = weekMr[dDate.getDay()];
      month = monthMr[dDate.getMonth()];
      document.getElementById('ba-cod-delivery-days-label').innerHTML = ' फ्री डिलिव्हरी';
    } else {
      day = weekHi[dDate.getDay()];
      month = monthHi[dDate.getMonth()];
      document.getElementById('ba-cod-delivery-days-label').innerHTML = ' फ्री डिलीवरी';
    }
    document.getElementById('ba-cod-delivery-date').innerHTML = day + ', ' + dDate.getDate() + ' ' + month;
  }
</script>

<script>
  function populatePriceDetailsCard() {
    let baUpdateCart = JSON.parse(localStorage.getItem('baUpdateCartResponse'));
    let items = baUpdateCart.items;

    const priceParentContainer = document.getElementById('ba-cod-price-details-content');
    priceParentContainer.replaceChildren();

    let priceItemsMainDiv = document.createElement('div');
    priceItemsMainDiv.id = 'ba-cod-price-details-items';
    document.getElementById('ba-cod-price-details-content').appendChild(priceItemsMainDiv);

    for (let i = 0; i < items?.length; i++) {
      let priceItemsRow = document.createElement('div');
      priceItemsRow.className = 'row mt-2 pb-2 align-items-center ba-cod-price-details-items';
      priceItemsMainDiv.appendChild(priceItemsRow);

      let priceItemsCol1 = document.createElement('div');
      priceItemsCol1.className = 'col-9';
      priceItemsCol1.innerHTML = items[i]?.product_title?.length > 34 ? items[i]?.product_title?.slice(0,34) + '..' : items[i]?.product_title;
      priceItemsRow.appendChild(priceItemsCol1);

      let priceItemsCol2 = document.createElement('div');
      priceItemsCol2.className = 'col-3 text-right';
      priceItemsCol2.id = 'ba-cod-product-price' + i;
      priceItemsCol2.innerHTML = items[i]?.final_line_price ? `₹ ${Number(items[i]?.final_line_price)/100}` : '0';
      priceItemsRow.appendChild(priceItemsCol2);
    }

    let priceItemsDiscountDiv = document.createElement('div');
    priceItemsDiscountDiv.id = 'ba-price-details-discount-row';
    priceItemsDiscountDiv.className = 'row mt-2 pb-2 align-items-center ba-cod-price-details-discount';
    document.getElementById('ba-cod-price-details-content').appendChild(priceItemsDiscountDiv);

    let priceItemsDiscountCol1 = document.createElement('div');
    priceItemsDiscountCol1.className = 'col-9';
    priceItemsDiscountCol1.innerHTML = priceDetailsDiscountLabel;
    priceItemsDiscountDiv.appendChild(priceItemsDiscountCol1);

    let priceItemsDiscountCol2 = document.createElement('div');
    priceItemsDiscountCol2.className = 'col-3 text-right';
    priceItemsDiscountCol2.id = 'ba-price-details-discount-value';
    priceItemsDiscountDiv.appendChild(priceItemsDiscountCol2);

    let priceItemsFreeDeliveryDiv = document.createElement('div');
    priceItemsFreeDeliveryDiv.className = 'row mt-2 pb-2 align-items-center ba-cod-price-details-items';
    priceItemsFreeDeliveryDiv.style.color = '#0A8047';
    document.getElementById('ba-cod-price-details-content').appendChild(priceItemsFreeDeliveryDiv);

    let priceItemsFreeDeliveryCol1 = document.createElement('div');
    priceItemsFreeDeliveryCol1.className = 'col-9';
    priceItemsFreeDeliveryCol1.innerHTML = priceDetailsFreeDeliveryLabel;
    priceItemsFreeDeliveryDiv.appendChild(priceItemsFreeDeliveryCol1);

    let priceItemsFreeDeliveryCol2 = document.createElement('div');
    priceItemsFreeDeliveryCol2.className = 'col-3 text-right';
    priceItemsFreeDeliveryCol2.innerHTML = priceDetailsFreeDeliveryValueLabel;
    priceItemsFreeDeliveryDiv.appendChild(priceItemsFreeDeliveryCol2);

    let priceItemsTotalDiv = document.createElement('div');
    priceItemsTotalDiv.id = 'ba-price-details-discount-total';
    priceItemsTotalDiv.className = 'row mt-3 pb-2 align-items-center ba-cod-price-details-total-amount';
    document.getElementById('ba-cod-price-details-content').appendChild(priceItemsTotalDiv);

    let priceItemsTotalCol1 = document.createElement('div');
    priceItemsTotalCol1.className = 'col-9';
    priceItemsTotalCol1.innerHTML = priceDetailsTotalAmountLabel;
    priceItemsTotalDiv.appendChild(priceItemsTotalCol1);

    let priceItemsTotalCol2 = document.createElement('div');
    priceItemsTotalCol2.className = 'col-3 text-right';
    priceItemsTotalCol2.innerHTML = `₹ ${baUpdateCart?.total_price/100}`;
    priceItemsTotalCol2.id = 'ba-price-details-total-value';
    priceItemsTotalDiv.appendChild(priceItemsTotalCol2);

    // Setting price value on the BA COD place order button
    document.getElementById('ba-cod-footer-total-amount').innerHTML = `₹ ${baUpdateCart?.total_price/100}`;
  }
</script>

<script>
  function onInputElementClick(fieldName) {
    let mobileValue = document.getElementById('farmerMobile').value;
    if (mobileValue && mobileValue?.length === 10) {
      sendBaCodGEvents('BA_cart_phn', {
        'from_frag': currentUrl1,
        'ba_field_name': fieldName,
        'ba_phone_number': mobileValue
      });
    }
    if (fieldName === 'name' || fieldName === 'mobile') {
      let cartTotalValue = document.getElementById('ba-price-details-total-value').innerHTML;
      cartTotalValue = cartTotalValue?.replace('₹ ', '');
      sendBaFbEvents('AddPaymentInfo', {currency: "INR", value: Number(cartTotalValue)});
    }
    sendBaCodGEvents('BA_address_clk', {
      'from_frag': currentUrl1,
      'ba_field_name': fieldName
    });
  }

  function sendBaCodGEvents(name, value) {
    try {
      gtag('event', name, value);
    } catch (error) {
      console.log('gtag error');
    }
  }

  function sendBaFbEvents(name, value) {
    // fbq('track', 'Purchase', {currency: "INR", value: createOrderTotalValue});
    value['content_ids'] = ['{{ product.id }}'];
    value['content_name'] = '{{ product.title }}';
    value['content_type'] = 'product_group';
    try {
      fbq('track', name, value);
    } catch (error) {
      console.log('fbq error');
    }
  }

  document.getElementById('baCodPincode').addEventListener('input', function () {
    if (this.value.length === 6) {

      loadBaLocation(this.value);
    }
  });

  function loadBaLocation(value) {
    if (value?.length === 6) {
      fetch(`https://s3.ap-south-1.amazonaws.com/shopify-krushidukan-apis/pincode_mapping/en/pincode/${value}/pincode.json`)
        .then(response => {
          if (response.status === 200) {
            response.json().then( result => {
              if (result?.data) {setPincodeLocation(result?.data);}
            });
          } else {
            resetTalukaAndVillage();
            console.log('Unable to get location');
          }
        }).catch(error => {
        console.log('Unable to get pincode location: ', error);
      });
    }
  }

  function setPincodeLocation(data) {
    resetLocationFields();
    const updateElement = (elementId, dataItem) => {
      if (dataItem?.id && dataItem?.name) {
        document.getElementById(elementId).value = dataItem[langKey] || dataItem.name;
      }
    };
    const langKey = `name_${lang}`;
    // commented code to update taluka and village values
    // updateElement('talukaName', data?.taluka);
    // updateElement('villageName', data?.village);

    ['state', 'district'].forEach((type) => {
      const dataItem = data?.[type];
      if (dataItem) {
        let name = dataItem[langKey] || dataItem.name;
        type === 'state'
          ? onStateClick(dataItem.id, name, dataItem.name_en)
          : onDistrictClick(dataItem.id, name, dataItem.name_en);
      }
    });
  }

</script>

<script>
  let imgUrl = ''
  let currentUrlForTrustBadge = window.location.href;
  if (currentUrlForTrustBadge?.includes('.com/en')) {
    imgUrl = 'https://shopify-krushidukan-apis.s3.ap-south-1.amazonaws.com/ba-cod-form-images/ba_cod_trust_badge_en.png';
  } else if (currentUrlForTrustBadge?.includes('.com/mr')) {
    imgUrl = 'https://shopify-krushidukan-apis.s3.ap-south-1.amazonaws.com/ba-cod-form-images/ba_cod_trust_badge_mr.png';
  } else {
    imgUrl = 'https://shopify-krushidukan-apis.s3.ap-south-1.amazonaws.com/ba-cod-form-images/ba_cod_trust_badge_hi.png';
  }

  document.getElementById('ba-cod-trust-badge-img').src = imgUrl;
</script>

<script type="application/javascript">
  window.addEventListener('beforeunload', () => {
    let modalOpen = document.body.classList.contains('modal-open');

    if (modalOpen) {
      document.getElementById('baCodFormClose').click();
    }
  });

  window.addEventListener('visibilitychange', () => {
    document.getElementById('ba-cod-form-overlay-loader').style.display = 'none';
  });
</script>


{% schema %}
{
  "name": "App Embed",
  "target": "body",
  "settings": []
}
{% endschema %}
